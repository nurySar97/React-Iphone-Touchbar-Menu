{"version":3,"sources":["TouchMenuItems.js","App.js","index.js"],"names":["TouchMenuItems","onHandleClickGrabBoxItem","useState","isShow","setIsShow","useEffect","timeout","setTimeout","clearTimeout","className","onClick","e","size","icon","faBars","faDice","faSearch","faHome","TouchMenu","INNER_WIDTH","window","innerWidth","INNER_HEIGHT","innerHeight","TRANSITION_NORMAL","TRANSITION_ZERO","menuIsOpen","useRef","isDragged","prevPositions","top","left","initCoords","JSON","parse","localStorage","getItem","width","height","left0","top0","styles","setStyles","positionAutoControl","useCallback","resolve","LEFT","TOP","prevStyles","transition","setPositionToBox","event","distanceX","distanceY","current","boxPositionX","changedTouches","pageX","boxPositionY","pageY","prevState","onHandleTouchStart","document","ontouchmove","onHandleTochEnd","Promise","then","type","stopPropagation","console","log","onunload","setItem","stringify","style","onTouchStart","onTouchEnd","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.89149ff9.chunk.js","sourcesContent":["import { faBars, faDice, faHome, faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst TouchMenuItems = ({ onHandleClickGrabBoxItem }) => {\r\n    let [isShow, setIsShow] = useState(false)\r\n    useEffect(() => {\r\n        let timeout = setTimeout(() => setIsShow(true), 300)\r\n        return () => clearTimeout(timeout)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"touchbar__modal\" onClick={e => onHandleClickGrabBoxItem(e, \"Modal\")} />\r\n            <div className={`touchbar__grid${isShow ? \" opacity\" : \"\"}`}>\r\n                <div className=\"touchbar__item\">\r\n                    <button onClick={(e) => onHandleClickGrabBoxItem(e, \"Menu\")}>\r\n                        <FontAwesomeIcon size=\"lg\" icon={faBars} />\r\n                        <div>Menu</div>\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"touchbar__item\">\r\n                    <button onClick={(e) => onHandleClickGrabBoxItem(e, \"Casino\")}>\r\n                        <FontAwesomeIcon size=\"lg\" icon={faDice} />\r\n                        <div>Casino</div>\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"touchbar__item\">\r\n                    <button onClick={(e) => onHandleClickGrabBoxItem(e, \"Search\")}>\r\n                        <FontAwesomeIcon size=\"lg\" icon={faSearch} />\r\n                        <div>Search</div>\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"touchbar__item\">\r\n                    <button onClick={(e) => onHandleClickGrabBoxItem(e, \"Home\")}>\r\n                        <FontAwesomeIcon size=\"lg\" icon={faHome} />\r\n                        <div>Home</div>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TouchMenuItems;","import React, { useCallback, useRef, useState } from 'react';\nimport TouchMenuItems from './TouchMenuItems';\n\nconst TouchMenu = () => {\n  let INNER_WIDTH = window.innerWidth;\n  let INNER_HEIGHT = window.innerHeight;\n  let TRANSITION_NORMAL = \"all .25s linear\";\n  let TRANSITION_ZERO = \"all 0s linear\";\n  let menuIsOpen = useRef(false);\n  let isDragged = useRef(false);\n  let prevPositions = useRef({ top: INNER_HEIGHT - 70, left: 10 });\n\n  let [styles, setStyles] = useState(() => {\n    let initCoords = JSON.parse(localStorage.getItem(\"TouchMenuCoords\"));\n    if (initCoords === null) return { top: INNER_HEIGHT - 70, left: 10, width: 60, height: 60 };\n    let { left0, top0 } = initCoords\n    return { top: top0, left: left0, width: 60, height: 60 }\n  });\n\n  const positionAutoControl = useCallback(resolve => {\n    let LEFT = (INNER_WIDTH - 60) / 2;\n    let TOP = (INNER_HEIGHT - 60) / 2;\n    let { left, top } = styles;\n    if (left <= LEFT && top <= TOP) {\n      if (left > top) {\n        setStyles(prevStyles => ({ ...prevStyles, top: 0, transition: TRANSITION_NORMAL }))\n        return\n      }\n      setStyles(prevStyles => ({ ...prevStyles, left: 0, transition: TRANSITION_NORMAL }))\n    } else if (left > LEFT && top <= TOP) {\n      if (INNER_WIDTH - left - 60 > top) {\n        setStyles(prevStyles => ({ ...prevStyles, top: 0, transition: TRANSITION_NORMAL }))\n        return\n      }\n      setStyles(prevStyles => ({ ...prevStyles, left: INNER_WIDTH - 60, transition: TRANSITION_NORMAL }))\n    } else if (left <= LEFT && top > TOP) {\n      if (left > INNER_HEIGHT - top - 60) {\n        setStyles(prevStyles => ({ ...prevStyles, top: INNER_HEIGHT - 60, transition: TRANSITION_NORMAL }))\n        return\n      }\n      setStyles(prevStyles => ({ ...prevStyles, left: 0, transition: TRANSITION_NORMAL }))\n    } else if (left > LEFT && top > TOP) {\n      if (INNER_WIDTH - left > INNER_HEIGHT - top) {\n        setStyles(prevStyles => ({ ...prevStyles, top: INNER_HEIGHT - 60, transition: TRANSITION_NORMAL }))\n        return\n      }\n      setStyles(prevStyles => ({ ...prevStyles, left: INNER_WIDTH - 60, transition: TRANSITION_NORMAL }))\n    }\n    resolve()\n  }, [INNER_HEIGHT, INNER_WIDTH, TRANSITION_NORMAL, styles])\n\n  const setPositionToBox = useCallback((event, distanceX, distanceY) => {\n    isDragged.current = true;\n    let boxPositionX = event.changedTouches[0].pageX - distanceX;\n    let boxPositionY = event.changedTouches[0].pageY - distanceY;\n    let createLimit = boxPositionX > 0 && boxPositionX < INNER_WIDTH - styles.width && boxPositionY > 0 && boxPositionY < INNER_HEIGHT - styles.height\n    if (createLimit) setStyles(prevState => ({ ...prevState, top: boxPositionY, left: boxPositionX }));\n  }, [INNER_HEIGHT, INNER_WIDTH, styles.height, styles.width])\n\n  const onHandleTouchStart = useCallback(event => {\n    setStyles(prevStyles => ({ ...prevStyles, transition: TRANSITION_ZERO }));\n    const distanceX = event.changedTouches[0].pageX - styles.left;\n    const distanceY = event.changedTouches[0].pageY - styles.top;\n    if (!menuIsOpen.current) {\n      document.ontouchmove = e => setPositionToBox(e, distanceX, distanceY);\n      return\n    }\n    isDragged.current = true;\n  }, [TRANSITION_ZERO, setPositionToBox, styles.left, styles.top])\n\n  const onHandleTochEnd = useCallback(() => {\n    document.ontouchmove = () => null;\n    if (isDragged.current) {\n      isDragged.current = false;\n      if (!menuIsOpen.current) {\n        new Promise(resolve => {\n          positionAutoControl(resolve)\n        }).then(() => setStyles(prevStyles => ({ ...prevStyles, transition: TRANSITION_ZERO })))\n      }\n      return\n    }\n    menuIsOpen.current = true;\n    if (menuIsOpen.current) {\n      prevPositions.current = { left: styles.left, top: styles.top };\n      setStyles({ transition: TRANSITION_NORMAL, width: 300, height: 300, left: (INNER_WIDTH - 300) / 2, top: (INNER_HEIGHT - 300) / 2 });\n    }\n  }, [TRANSITION_NORMAL, INNER_WIDTH, INNER_HEIGHT, TRANSITION_ZERO, styles.left, styles.top, positionAutoControl])\n\n  const onHandleClickGrabBoxItem = useCallback((e, type) => {\n    e.stopPropagation();\n    menuIsOpen.current = false;\n    setStyles({ transition: TRANSITION_NORMAL, width: 60, height: 60, left: prevPositions.current.left, top: prevPositions.current.top });\n    switch (type) {\n      case \"Menu\":\n        console.log(\"Menu\")\n        break;\n      case \"Casino\":\n        console.log(\"Casino\")\n        break;\n      case \"Search\":\n        console.log(\"Search\")\n        break;\n      case \"Home\":\n        console.log(\"Home\")\n        break;\n      case \"Chat\":\n        console.log(\"Chat\")\n        break;\n      default:\n        break\n    }\n  },[TRANSITION_NORMAL])\n\n  window.onunload = () => {\n    if (menuIsOpen.current) {\n      localStorage.setItem(\"TouchMenuCoords\", JSON.stringify({ left0: prevPositions.current.left, top0: prevPositions.current.top }))\n      return\n    }\n    localStorage.setItem(\"TouchMenuCoords\", JSON.stringify({ left0: styles.left, top0: styles.top }))\n  }\n  return (\n    <>\n      <h2 className=\"touchbar__title\">Touch menu starts to work when window inner width less than 769px and in Mobile Devices!(Touch events)</h2>\n      <div className=\"touchbar\"\n        style={styles}\n        onTouchStart={onHandleTouchStart}\n        onTouchEnd={onHandleTochEnd}\n      >\n        {\n          menuIsOpen.current\n            ?\n            <TouchMenuItems\n              onHandleClickGrabBoxItem={onHandleClickGrabBoxItem}\n            />\n            :\n            <>\n              <div className=\"touchbar_radius1\">\n                <div className=\"touchbar_radius2\">\n                </div>\n              </div>\n            </>\n        }\n      </div>\n    </>\n  );\n}\n\nexport default TouchMenu;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}